{
  "version": 3,
  "sources": ["../index.js"],
  "sourcesContent": ["const core = require('@actions/core');\nconst github = require('@actions/github');\nconst { Octokit } = require('@octokit/rest');\nconst axios = require('axios');\n\nconst githubToken = core.getInput('gh-token');\nconst openaiApiKey = core.getInput('openai-api-key');\n\nconst octokit = new Octokit({ auth: githubToken });\n\nconst reviewCodeWithOpenAI = async (code) => {\n  const response = await axios.post(\n    'https://api.openai.com/v1/chat/completions',\n    {\n      model: 'gpt-3.5-turbo',\n      messages: [\n        {\n          role: 'system',\n          content: 'You are a helpful assistant that reviews code.',\n        },\n        {\n          role: 'user',\n          content: `Review the following code and provide feedback. Additionally, please offer your best suggestions for improvement:\\n\\n${code}`,\n        },\n      ],\n      max_tokens: 150,\n      n: 1,\n      stop: null,\n      temperature: 0.7,\n    },\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${openaiApiKey}`,\n      },\n    }\n  );\n  return response.data.choices[0].message.content.trim();\n};\nconst run = async () => {\n  try {\n    const context = github.context;\n    const event = context.eventName;\n    const payload = context.payload;\n\n    if (\n      event === 'issue_comment' &&\n      payload.action === 'created' &&\n      payload.comment &&\n      payload.issue\n    ) {\n      const comment = payload.comment.body;\n      const owner = payload.repository.owner.login;\n      const repo = payload.repository.name;\n      const issueNumber = payload.issue.number;\n\n      if (comment.trim() === '/review' && payload.issue.pull_request) {\n        const pullRequestUrl = payload.issue.pull_request.url;\n        const pullRequestNumber = pullRequestUrl.split('/').pop();\n\n        console.log(\n          `Fetching files for PR ${pullRequestNumber} in repo ${owner}/${repo}`\n        );\n\n        try {\n          const { data: files } = await octokit.pulls.listFiles({\n            owner,\n            repo,\n            pull_number: pullRequestNumber,\n          });\n\n          let reviewComments = '';\n\n          for (const file of files) {\n            if (file.patch) {\n              const review = await reviewCodeWithOpenAI(file.patch);\n              reviewComments += `### Review for ${file.filename}:\\n\\n${review}\\n\\n`;\n            }\n          }\n\n          await octokit.issues.createComment({\n            owner,\n            repo,\n            issue_number: issueNumber,\n            body: reviewComments,\n          });\n        } catch (error) {\n          console.error(`Error fetching PR files: ${error.message}`);\n          if (error.response) {\n            console.error(\n              `Error details: ${JSON.stringify(error.response.data, null, 2)}`\n            );\n          }\n          core.setFailed(`Error fetching PR files: ${error.message}`);\n        }\n      }\n    }\n  } catch (error) {\n    core.setFailed(error.message);\n    if (error.response) {\n      core.setFailed(\n        `Error details: ${JSON.stringify(error.response.data, null, 2)}`\n      );\n    }\n  }\n};\n\nrun();\n"],
  "mappings": "AAAA,IAAMA,EAAO,QAAQ,eAAe,EAC9BC,EAAS,QAAQ,iBAAiB,EAClC,CAAE,QAAAC,CAAQ,EAAI,QAAQ,eAAe,EACrCC,EAAQ,QAAQ,OAAO,EAEvBC,EAAcJ,EAAK,SAAS,UAAU,EACtCK,EAAeL,EAAK,SAAS,gBAAgB,EAE7CM,EAAU,IAAIJ,EAAQ,CAAE,KAAME,CAAY,CAAC,EAE3CG,EAAuB,MAAOC,IACjB,MAAML,EAAM,KAC3B,6CACA,CACE,MAAO,gBACP,SAAU,CACR,CACE,KAAM,SACN,QAAS,gDACX,EACA,CACE,KAAM,OACN,QAAS;AAAA;AAAA,EAAwHK,CAAI,EACvI,CACF,EACA,WAAY,IACZ,EAAG,EACH,KAAM,KACN,YAAa,EACf,EACA,CACE,QAAS,CACP,eAAgB,mBAChB,cAAe,UAAUH,CAAY,EACvC,CACF,CACF,GACgB,KAAK,QAAQ,CAAC,EAAE,QAAQ,QAAQ,KAAK,EAEjDI,EAAM,SAAY,CACtB,GAAI,CACF,IAAMC,EAAUT,EAAO,QACjBU,EAAQD,EAAQ,UAChBE,EAAUF,EAAQ,QAExB,GACEC,IAAU,iBACVC,EAAQ,SAAW,WACnBA,EAAQ,SACRA,EAAQ,MACR,CACA,IAAMC,EAAUD,EAAQ,QAAQ,KAC1BE,EAAQF,EAAQ,WAAW,MAAM,MACjCG,EAAOH,EAAQ,WAAW,KAC1BI,EAAcJ,EAAQ,MAAM,OAElC,GAAIC,EAAQ,KAAK,IAAM,WAAaD,EAAQ,MAAM,aAAc,CAE9D,IAAMK,EADiBL,EAAQ,MAAM,aAAa,IACT,MAAM,GAAG,EAAE,IAAI,EAExD,QAAQ,IACN,yBAAyBK,CAAiB,YAAYH,CAAK,IAAIC,CAAI,EACrE,EAEA,GAAI,CACF,GAAM,CAAE,KAAMG,CAAM,EAAI,MAAMZ,EAAQ,MAAM,UAAU,CACpD,MAAAQ,EACA,KAAAC,EACA,YAAaE,CACf,CAAC,EAEGE,EAAiB,GAErB,QAAWC,KAAQF,EACjB,GAAIE,EAAK,MAAO,CACd,IAAMC,EAAS,MAAMd,EAAqBa,EAAK,KAAK,EACpDD,GAAkB,kBAAkBC,EAAK,QAAQ;AAAA;AAAA,EAAQC,CAAM;AAAA;AAAA,CACjE,CAGF,MAAMf,EAAQ,OAAO,cAAc,CACjC,MAAAQ,EACA,KAAAC,EACA,aAAcC,EACd,KAAMG,CACR,CAAC,CACH,OAASG,EAAO,CACd,QAAQ,MAAM,4BAA4BA,EAAM,OAAO,EAAE,EACrDA,EAAM,UACR,QAAQ,MACN,kBAAkB,KAAK,UAAUA,EAAM,SAAS,KAAM,KAAM,CAAC,CAAC,EAChE,EAEFtB,EAAK,UAAU,4BAA4BsB,EAAM,OAAO,EAAE,CAC5D,CACF,CACF,CACF,OAASA,EAAO,CACdtB,EAAK,UAAUsB,EAAM,OAAO,EACxBA,EAAM,UACRtB,EAAK,UACH,kBAAkB,KAAK,UAAUsB,EAAM,SAAS,KAAM,KAAM,CAAC,CAAC,EAChE,CAEJ,CACF,EAEAb,EAAI",
  "names": ["core", "github", "Octokit", "axios", "githubToken", "openaiApiKey", "octokit", "reviewCodeWithOpenAI", "code", "run", "context", "event", "payload", "comment", "owner", "repo", "issueNumber", "pullRequestNumber", "files", "reviewComments", "file", "review", "error"]
}
